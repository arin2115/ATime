<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <meta property="og:title" content="Liczniki - ATime" />
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://atime.arindev.tech" />
        <meta property="og:description" content='Lista liczników.' />

        <title>Liczniki - ATime</title>

        <style>
            body {
                background-color: gray;
                color: white;
            }
        </style>
    </head>
    <body>
        <p>Witaj <%=session.username%>! <button id="submit" onclick="window.location.href='/'">strona główna</button> <button id="submit" onclick="logout()">wyloguj się</button> <button id="submit" onclick="window.location.href='/user'">profil</button> <button id="submit" onclick="window.location.href='/admin'">admin panel</button></p>

        <script>
            var timers = [];
        </script>

        <% if (timers == "error") { %> <p>Wystąpił problem z wyświetleniem liczników.</p> <% } %>
        <% if (timers.length == 0) { %> <hr> <p>Nie znaleziono żadnych liczników.</p> <% } %>
        <% timers.forEach(timer => { %>
            <script>
                timers.push({
                    id: "<%=timer.id%>",
                    title: "<%=timer.title%>",
                    date: "<%=timer.date%>",
                    time: "<%=timer.time%>",
                    display: "<%=timer.display%>",
                    username: "<%=timer.username%>",
                    private: "<%=timer.private%>",
                    featured: "<%=timer.featured%>",
                    stopped: "<%=timer.stopped%>",
                    stopDays: "<%=timer.stopDays%>",
                    stopHours: "<%=timer.stopHours%>",
                    stopMinutes: "<%=timer.stopMinutes%>",
                    stopSeconds: "<%=timer.stopSeconds%>",
                    created: "<%=timer.created%>"
                });
            </script>
        <% }) %>
        <% if (timers.filter(t => t.featured).length > 0) { %> <hr> <p>Wyróżnione liczniki:</p> <% } %>
        <div id="featuredTimers">
            <% timers.filter(t => t.featured).forEach(timer => { %>
                <p><a href="/timer/<%=timer.id%>"><%=timer.title%> - <%=timer.date.split("-")[2] + "." + timer.date.split("-")[1] + "." + timer.date.split("-")[0]%> <%=timer.time%></a> <% if (isAdmin) { %> <button onclick="handleEdit('<%=timer.id%>')">edytuj</button> <button onclick="deleteTimer('<%=timer.id%>')">usuń</button> <button onclick="unfeatureTimer('<%=timer.id%>')">nie wyróżniaj</button> <% } %></p>
            <% }) %>
        </div>

        <div id="publicTimers">
            <% if (timers != "error" && timers.filter(t => !t.featured && !t.private).length > 0) { %> <hr> <p>Publiczne liczniki:</p> <% } %>
            <% timers.filter(t => !t.featured && !t.private).forEach(timer => { %>
                <p><a href="/timer/<%=timer.id%>"><%=timer.title%> - <%=timer.date.split("-")[2] + "." + timer.date.split("-")[1] + "." + timer.date.split("-")[0]%> <%=timer.time%></a> <% if (isAdmin) { %> <button onclick="handleEdit('<%=timer.id%>')">edytuj</button> <button onclick="deleteTimer('<%=timer.id%>')">usuń</button> <button onclick="featureTimer('<%=timer.id%>')">wyróżnij</button> <button onclick="privateTimer('<%=timer.id%>')">uprywatnij</button> <% } %></p>
            <% }) %>
        </div>

        <div id="privateTimers">
            <% if (timers != "error" && timers.filter(t => !t.featured && t.private).length > 0) { %> <hr> <p>Prywatne liczniki:</p> <% } %>
            <% timers.filter(t => !t.featured && t.private).forEach(timer => { %>
                <p><a href="/timer/<%=timer.id%>"><%=timer.title%> - <%=timer.date.split("-")[2] + "." + timer.date.split("-")[1] + "." + timer.date.split("-")[0]%> <%=timer.time%></a> <% if (isAdmin) { %> <button onclick="handleEdit('<%=timer.id%>')">edytuj</button> <button onclick="deleteTimer('<%=timer.id%>')">usuń</button> <button onclick="publicTimer('<%=timer.id%>')">upublicznij</button> <% } %></p>
            <% }) %>
        </div>

        <% if (timers.length > 0) { %>
            <button onclick="fixTimers()">Napraw liczniki</button>
        <% } %>

        <div id="edit" style="display: none;">
            <hr>

            <p id="createtext">Edytuj licznik: </p>
            <p id="err" style="color: red"></p>
            <input type="text" placeholder="Nazwa licznika" id="createtimer-title">
            <input type="date" placeholder="Data" id="createtimer-date">
            <input type="time" placeholder="Godzina" id="createtimer-time">
            <input type="text" placeholder="Wyświetlanie" id="createtimer-display" value="{nazwa} od {data} {godzina}">
            <p>Przykład: <b>{nazwa} od {data} {godzina}</b></p>
            <br><br>
            <button id="createTimerBtn" onclick="editTimer(this)" value="create">Zapisz zmiany</button>
            <button id="cancelTimerBtn" onclick="cancelChanges()">Anuluj zmiany</button>
            <button onclick="preview()">Podgląd</button>
            <br><br>
            <iframe id="previewframe" src="/timer/preview/nazwa/data/godzina/info" style="visibility: hidden;" width="50%" height="480px"></iframe>
        </div>

        <script>
            function logout() {
                var data = {
                    method: 'POST',
                    headers: {
                        'Authorization': 'Basic ' + btoa(unescape(encodeURIComponent("<%=session.username%>")))
                    },
                }
                fetch('/auth/logout', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function fixTimers() {
                var data = {
                    method: 'POST'
                }
                fetch('/timer/fix', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function handleEdit(id) {
                var timer = timers.filter(t => t.id == id)[0];

                document.getElementById("createtimer-title").value = timer.title;
                document.getElementById("createtimer-date").value = timer.date;
                document.getElementById("createtimer-time").value = timer.time;
                document.getElementById("createtimer-display").value = timer.display;

                document.getElementById("createTimerBtn").value = timer.id;
                document.getElementById("cancelTimerBtn").style.display = "initial";

                document.getElementById("createtext").innerHTML = "Edytuj licznik <b>" + timer.title + "</b>";
                document.getElementById("edit").style.display = "initial";
            }

            function cancelChanges() {
                document.getElementById("edit").style.display = "none";
                document.getElementById("previewframe").style.visibility = "hidden";
                document.getElementById("previewframe").src = "/timer/preview/nazwa/data/godzina/info";
            }

            function editTimer(el) {
                var id = el.value;
                var err = document.getElementById("err");
                err.innerHTML = "";

                var title = document.getElementById("createtimer-title").value;
                var date = document.getElementById("createtimer-date").value;
                var time = document.getElementById("createtimer-time").value;
                var display = document.getElementById("createtimer-display").value;

                if (title == "" || date == "" || time == "" || display == "") {
                    err.innerHTML = "Wypełnij tytuł, datę, godzinę oraz sposób wyświetlania!";
                    return;
                }

                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id,
                        "title": title,
                        "date": date,
                        "time": time,
                        "display": display,
                    })
                }

                fetch('/timer/edit', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function preview() {
                var previewframe = document.getElementById("previewframe");
                var err = document.getElementById("err");
                var title = document.getElementById("createtimer-title").value;
                var date = document.getElementById("createtimer-date").value;
                var time = document.getElementById("createtimer-time").value;
                var display = document.getElementById("createtimer-display").value;

                if (title == "" || date == "" || time == "" || display == "") {
                    err.innerHTML = "Wypełnij tytuł, datę, godzinę i sposób wyświetlania.";
                    previewframe.src = "";
                    previewframe.style.visibility = "hidden";
                    lastPreviewTitle = "";
                    lastPreviewDate = "";
                    lastPreviewTime = "";
                    lastPreviewDisplay = "";

                    return;
                }

                if (title == lastPreviewTitle && date == lastPreviewDate && time == lastPreviewTime && display == lastPreviewDisplay) {
                    previewframe.src = "";
                    previewframe.style.visibility = "hidden";
                    lastPreviewTitle = "";
                    lastPreviewDate = "";
                    lastPreviewTime = "";
                    lastPreviewDisplay = "";
                    return;
                }

                lastPreviewTitle = title;
                lastPreviewDate = date;
                lastPreviewTime = time;
                lastPreviewDisplay = display;

                previewframe.src = "/timer/preview/" + document.getElementById("createtimer-title").value + "/" + document.getElementById("createtimer-date").value + "/" + document.getElementById("createtimer-time").value + "/" + document.getElementById("createtimer-display").value;
                previewframe.style.visibility = "visible";
            }

            function featureTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/feature', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function unfeatureTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/unfeature', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function publicTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/public', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function privateTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/private', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function deleteTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/delete', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }
        </script>
    </body>
</html>