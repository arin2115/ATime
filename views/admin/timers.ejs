<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>Liczniki - ATime</title>

        <style>
            body {
                background-color: gray;
                color: white;
            }
        </style>
    </head>
    <body>
        <p>Witaj <%=session.username%>! <button id="submit" onclick="window.location.href='/'">strona główna</button> <button id="submit" onclick="logout()">wyloguj się</button> <button id="submit" onclick="window.location.href='/user'">profil</button> <button id="submit" onclick="window.location.href='/admin'">admin panel</button></p>

        <% if (timers == "error") { %> <p>Wystąpił problem z wyświetleniem liczników.</p> <% } %>
        <% if (timers.length == 0) { %> <hr> <p>Nie znaleziono żadnych liczników.</p> <% } %>
        <% if (timers.filter(t => t.featured).length > 0) { %> <hr> <p>Wyróżnione liczniki:</p> <% } %>
        <div id="featuredTimers">
            <% timers.filter(t => t.featured).forEach(timer => { %>
                <p><a href="/timer/<%=timer.id%>"><%=timer.title%> - <%=timer.time%></a> <% if (isAdmin) { %> <button onclick="deleteTimer('<%=timer.id%>')">usuń</button> <button onclick="unfeatureTimer('<%=timer.id%>')">nie wyróżniaj</button> <button onclick="privateTimer('<%=timer.id%>')">ukryj</button> <% } %></p>
            <% }) %>
        </div>

        <div id="publicTimers">
            <% if (timers != "error" && timers.filter(t => !t.featured && !t.private).length > 0) { %> <hr> <p>Publiczne liczniki:</p> <% } %>
            <% timers.filter(t => !t.featured && !t.private).forEach(timer => { %>
                <p><a href="/timer/<%=timer.id%>"><%=timer.title%> - <%=timer.time%></a> <% if (isAdmin) { %> <button onclick="deleteTimer('<%=timer.id%>')">usuń</button> <button onclick="featureTimer('<%=timer.id%>')">wyróżnij</button> <button onclick="privateTimer('<%=timer.id%>')">ukryj</button> <% } %></p>
            <% }) %>
        </div>

        <div id="privateTimers">
            <% if (timers != "error" && timers.filter(t => !t.featured && t.private).length > 0) { %> <hr> <p>Prywatne liczniki:</p> <% } %>
            <% timers.filter(t => !t.featured && t.private).forEach(timer => { %>
                <p><a href="/timer/<%=timer.id%>"><%=timer.title%> - <%=timer.time%></a> <% if (isAdmin) { %> <button onclick="deleteTimer('<%=timer.id%>')">usuń</button> <button onclick="featureTimer('<%=timer.id%>')">wyróżnij</button> <button onclick="publicTimer('<%=timer.id%>')">upublicznij</button> <% } %></p>
            <% }) %>
        </div>

        <script>
            function logout() {
                var data = {
                    method: 'POST',
                    headers: {
                        'Authorization': 'Basic ' + btoa(unescape(encodeURIComponent("<%=session.username%>")))
                    },
                }
                fetch('/auth/logout', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function featureTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/feature', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function unfeatureTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/unfeature', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function publicTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/public', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function privateTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/private', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function deleteTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/delete', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }
        </script>
    </body>
</html>