<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <meta property="og:title" content="Użytkownik - ATime" />
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://atime.arindev.tech" />
        <% if (username) { %>
            <meta property="og:description" content='Profil użytkownika <%=username%>' />
        <% } else { %>
            <meta property="og:description" content='Twój profil' />
        <% } %>

        <title>Uzytkownik - ATime</title>

        <style>
            body {
                background-color: gray;
                color: white;
            }

            iframe {
                border: solid 1px black;
            }
        </style>
    </head>
    <body onload="onload()">
        <script>
            var timers = [];
        </script>
	<% if (session.logged) { %>
        	<p>Witaj <%=session.username%>! <button id="submit" onclick="window.location.href='/'">strona główna</button> <button id="submit" onclick="logout()">wyloguj się</button> <% if (isAdmin) { %> <button id="submit" onclick="window.location.href='/admin'">admin panel</button> <% } %></p>
        	<p>Link do twojego profilu: <a href="/user/<%=session.username%>">https://atime.arindev.tech/user/<%=session.username%></a></p>
	<% } else { %>
		<button onclick="window.location.href='/'">strona główna</button> <button onclick="window.location.href='/login'">logowanie</button> <button onclick="window.location.href='/register'">rejestracja</button>
	<% } %>

        <hr>
        
        <% if (timers == "error" && !username) { %> <p>Wystąpił problem z wyświetleniem liczników użytkownika <%=username%>.</p> <% } %>
        <% if (timers == "error" && username) { %> <p>Wystąpił problem z wyświetleniem Twoich liczników.</p> <% } %>
        <% if (timers != "error" && !timers.length > 0 && !username) { %> <p>Nie masz żadnych liczników.</p> <% } else if (!username) { %> <p>Twoje liczniki:</p> <% } %>
        <% if (timers != "error" && !timers.length > 0 && username) { %> <p>Użytkownik <%=username%> nie ma żadnych liczników.</p> <% } else if (username) { %> <p>Liczniki użytkownika <%=username%>:</p> <% } %>
        <div id="userTimers">
            <% timers.forEach(timer => { %>
                <script>
                    timers.push({
                        id: "<%=timer.id%>",
                        title: "<%=timer.title%>",
                        date: "<%=timer.date%>",
                        time: "<%=timer.time%>",
                        display: "<%=timer.display%>",
                        username: "<%=timer.username%>",
                        private: "<%=timer.private%>",
                        featured: "<%=timer.featured%>",
                        created: "<%=timer.created%>"
                    });
                </script>
                <p><a href="/timer/<%=timer.id%>"><%=timer.title%> - <%=timer.date.split("-")[2] + "." + timer.date.split("-")[1] + "." + timer.date.split("-")[0]%> <%=timer.time%></a> | <%=timer.private ? "prywatny" : "publiczny"%> <%=timer.featured ? "| wyróżniony" : ""%> 
                    <% if (!username) { %>
                        | <button onclick="editBtns('<%=timer.id%>')">edytuj</button>
                          <button onclick="deleteTimer('<%=timer.id%>')">usuń</button>
                        <% if (timer.private) { %>
                            <button onclick='publicTimer("<%=timer.id%>")'>upublicznij</button>
                        <% } else { %>
                            <button onclick='privateTimer("<%=timer.id%>")'>uprywatnij</button>
                        <% } %>

                        <% if (isAdmin) { %>
                            <% if (timer.featured) { %>
                                <button onclick='unfeatureTimer("<%=timer.id%>")'>nie wyróżniaj</button>
                            <% } else { %>
                                <button onclick='featureTimer("<%=timer.id%>")'>wyróżnij</button>
                            <% } %>
                        <% } %>
                    <% } %>
                </p>
            <% }) %>
        </div>

        <% if (!username) { %>
            <hr>

            <p id="createtext">Stwórz nowy licznik</p>
            <p id="err" style="color: red"></p>
            <input type="text" placeholder="Nazwa licznika" id="createtimer-title">
            <input type="date" placeholder="Data" id="createtimer-date">
            <input type="time" placeholder="Godzina" id="createtimer-time">
            <input type="text" placeholder="Wyświetlanie" id="createtimer-display" value="{nazwa} od {data} {godzina}">
            <p>Przykład: <b>{nazwa} od {data} {godzina}</b></p>
            <div id="privTimerData">
                prywatny:
                <input type="checkbox" id="createtimer-private">
                <% if (isAdmin) { %>
                    wyróżniony:
                    <input type="checkbox" id="createtimer-featured">
                <% } %>
            </div>
            <br><br>
            <button id="createTimerBtn" onclick="handleCreate(this)" value="create">Stwórz licznik</button>
            <button id="cancelTimerBtn" onclick="cancelChanges()" style="display: none;">Anuluj zmiany</button>
            <button onclick="preview()">Podgląd</button>
            <br><br>
            <iframe id="previewframe" src="/timer/preview/nazwa/data/godzina/info" style="visibility: hidden;"></iframe>
        <% } %>

        <script>
            var lastPreviewTitle = "";
            var lastPreviewDate = "";
            var lastPreviewTime = "";
            var lastPreviewInfo = "";

            var isAdmin = "<%=isAdmin%>";

            var featured = document.getElementById("createtimer-featured");
            if (!isAdmin) {
                featured.style.visibility = "hidden";
            }

            function handleCreate(el) {
                if (el.value == "create") createTimer();
                else editTimer(el.value);
            }

            function addTimer(timer) {
                timers.push(timer);
            }

            function onload() {

            }

            function editBtns(id) {
                var timer = timers.filter(t => t.id == id)[0];

                document.getElementById("createtimer-title").value = timer.title;
                document.getElementById("createtimer-date").value = timer.date;
                document.getElementById("createtimer-time").value = timer.time;
                document.getElementById("createtimer-display").value = timer.display;

                document.getElementById("createTimerBtn").innerHTML = "Zapisz zmiany";
                document.getElementById("createTimerBtn").value = timer.id;
                document.getElementById("cancelTimerBtn").style.display = "initial";

                document.getElementById("privTimerData").style.display = "none";
                document.getElementById("createtext").innerHTML = "Edytuj licznik <b>" + timer.title + "</b>";
            }

            function cancelChanges() {
                document.getElementById("createtimer-title").value = "";
                document.getElementById("createtimer-date").value = "";
                document.getElementById("createtimer-time").value = "";
                document.getElementById("createtimer-display").value = "{nazwa} od {data} {godzina}";

                document.getElementById("createTimerBtn").innerHTML = "Stwórz licznik";
                document.getElementById("createTimerBtn").value = "create";
                document.getElementById("cancelTimerBtn").style.display = "none";

                document.getElementById("privTimerData").style.display = "initial";
                document.getElementById("createtext").innerHTML = "Stwórz nowy licznik";
            }

            function preview() {
                var previewframe = document.getElementById("previewframe");
                var err = document.getElementById("err");
                var title = document.getElementById("createtimer-title").value;
                var date = document.getElementById("createtimer-date").value;
                var time = document.getElementById("createtimer-time").value;
                var display = document.getElementById("createtimer-display").value;

                if (title == "" || date == "" || time == "" || display == "") {
                    err.innerHTML = "Wypełnij tytuł, datę, godzinę i sposób wyświetlania.";
                    previewframe.src = "";
                    previewframe.style.visibility = "hidden";
                    lastPreviewTitle = "";
                    lastPreviewDate = "";
                    lastPreviewTime = "";
                    lastPreviewDisplay = "";

                    return;
                }

                if (title == lastPreviewTitle && date == lastPreviewDate && info == lastPreviewDisplay) {
                    previewframe.src = "";
                    previewframe.style.visibility = "hidden";
                    lastPreviewTitle = "";
                    lastPreviewDate = "";
                    lastPreviewTime = "";
                    lastPreviewDisplay = "";
                    return;
                }

                lastPreviewTitle = title;
                lastPreviewDate = date;
                lastPreviewTime = time;
                lastPreviewDisplay = display;

                previewframe.src = "/timer/preview/" + document.getElementById("createtimer-title").value + "/" + document.getElementById("createtimer-date").value + "/" + document.getElementById("createtimer-time").value + "/" + document.getElementById("createtimer-display").value;
                previewframe.style.visibility = "visible";
            }

            function deleteTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/delete', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }
            
            function createTimer() {
                var title = document.getElementById("createtimer-title").value;
                var date = document.getElementById("createtimer-date").value;
                var time = document.getElementById("createtimer-time").value;
                var display = document.getElementById("createtimer-display").value;

                if (title == "" || date == "" || time == "" || display == "") {
                    err.innerHTML = "Wypełnij tytuł, datę, godzinę oraz sposób wyświetlania!";
                    return;
                }

                var featuredcheck = document.getElementById("createtimer-featured");
                var featured = false;
                if (featuredcheck) featured = featuredcheck.checked;

                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "title": document.getElementById("createtimer-title").value,
                        "date": document.getElementById("createtimer-date").value,
                        "time": document.getElementById("createtimer-time").value,
                        "display": document.getElementById("createtimer-display").value,
                        "private": document.getElementById("createtimer-private").checked,
                        "featured": featured
                    })
                }
                fetch('/timer/create', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function editTimer(id) {
                var title = document.getElementById("edittimer-title-" + id).value;
                var date = document.getElementById("edittimer-date-" + id).value;
                var time = document.getElementById("edittimer-time-" + id).value;
                var display = document.getElementById("edittimer-display-" + id).value;

                if (title == "" || date == "" || time == "" || display == "") {
                    err.innerHTML = "Wypełnij tytuł, datę, godzinę oraz sposób wyświetlania!";
                    return;
                }

                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id,
                        "title": document.getElementById("edittimer-title-" + id).value,
                        "date": document.getElementById("edittimer-date-" + id).value,
                        "time": document.getElementById("edittimer-time-" + id).value,
                        "display": document.getElementById("edittimer-display-" + id).value,
                    })
                }

                fetch('/timer/edit', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function featureTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/feature', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function unfeatureTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/unfeature', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function publicTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/public', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function privateTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/private', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function logout() {
                var data = {
                    method: 'POST',
                    headers: {
                        'Authorization': 'Basic ' + btoa(unescape(encodeURIComponent("<%=session.username%>")))
                    },
                }
                fetch('/auth/logout', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }
        </script>
    </body>
</html>
