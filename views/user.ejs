<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">

        <meta property="og:title" content="Użytkownik - ATime" />
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://atime.arindev.tech" />
        <% if (username) { %>
            <meta property="og:description" content='Profil użytkownika <%=username%>' />
        <% } else { %>
            <meta property="og:description" content='Twój profil' />
        <% } %>

        <title>Uzytkownik - ATime</title>

        <style>
            body {
                background-color: gray;
                color: white;
            }

            iframe {
                border: solid 1px black;
            }

            .modal {
                display: none;
                position: fixed;
                z-index: 1;
                left: 0;
                top: 0;
                width: 100%;
                height: 100%;
                overflow: auto;
                background-color: rgb(0,0,0);
                background-color: rgba(0,0,0,0.4);
            }

            .modal-header {
                padding: 2px 16px;
                background-color: #5cb85c;
                color: white;
            }

            .modal-body {padding: 2px 16px;}

            .modal-footer {
                padding: 2px 16px;
                background-color: #5cb85c;
                color: white;
            }

            .modal-content {
                position: relative;
                background-color: #fefefe;
                margin: auto;
                padding: 0;
                border: 1px solid #888;
                width: 80%;
                box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
                animation-name: animatetop;
                animation-duration: 0.4s
            }

            @keyframes animatetop {
                from {top: -300px; opacity: 0}
                to {top: 0; opacity: 1}
            }

            .close {
                color: #aaa;
                float: right;
                font-size: 28px;
                font-weight: bold;
            }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }
        </style>
    </head>
    <body>
	<% if (session.logged) { %>
        	<p>Witaj <%=session.username%>! <button id="submit" onclick="window.location.href='/'">strona główna</button> <button id="submit" onclick="logout()">wyloguj się</button> <% if (isAdmin) { %> <button id="submit" onclick="window.location.href='/admin'">admin panel</button> <% } %></p>
        	<p>Link do twojego profilu: <a href="/user/<%=session.username%>">https://atime.arindev.tech/user/<%=session.username%></a></p>
	<% } else { %>
		<button onclick="window.location.href='/'">strona główna</button> <button onclick="window.location.href='/login'">logowanie</button> <button onclick="window.location.href='/register'">rejestracja</button>
	<% } %>

        <hr>
        
        <% if (timers == "error" && !username) { %> <p>Wystąpił problem z wyświetleniem liczników użytkownika <%=username%>.</p> <% } %>
        <% if (timers == "error" && username) { %> <p>Wystąpił problem z wyświetleniem Twoich liczników.</p> <% } %>
        <% if (timers != "error" && !timers.length > 0 && !username) { %> <p>Nie masz żadnych liczników.</p> <% } else if (!username) { %> <p>Twoje liczniki:</p> <% } %>
        <% if (timers != "error" && !timers.length > 0 && username) { %> <p>Użytkownik <%=username%> nie ma żadnych liczników.</p> <% } else if (username) { %> <p>Liczniki użytkownika <%=username%>:</p> <% } %>
        <div id="userTimers">
            <% timers.forEach(timer => { %>
                <p><a href="/timer/<%=timer.id%>"><%=timer.title%> - <%=timer.date.split("-")[2] + "." + timer.date.split("-")[1] + "." + timer.date.split("-")[0]%> <%=timer.time%></a> | <%=timer.private ? "prywatny" : "publiczny"%> <%=timer.featured ? "| wyróżniony" : ""%> 
                    <% if (!username) { %>
                        | <button onclick="openModal('<%=timer.id%>')">edytuj</button>
                          <button onclick="deleteTimer('<%=timer.id%>')">usuń</button>
                        <% if (timer.private) { %>
                            <button onclick='publicTimer("<%=timer.id%>")'>upublicznij</button>
                        <% } else { %>
                            <button onclick='privateTimer("<%=timer.id%>")'>uprywatnij</button>
                        <% } %>

                        <% if (isAdmin) { %>
                            <% if (timer.featured) { %>
                                <button onclick='unfeatureTimer("<%=timer.id%>")'>nie wyróżniaj</button>
                            <% } else { %>
                                <button onclick='featureTimer("<%=timer.id%>")'>wyróżnij</button>
                            <% } %>
                        <% } %>
                    <% } %>
                </p>
            <% }) %>
        </div>

        <% if (!username) { %>
            <hr>

            <p id="err" style="color: red"></p>
            <input type="text" placeholder="Nazwa licznika" id="createtimer-title">
            <input type="date" placeholder="Data" id="createtimer-date">
            <input type="time" placeholder="Godzina" id="createtimer-time">
            <input type="text" placeholder="Wyświetlanie" id="createtimer-display">
            <p>Przykład: <b>{nazwa} od {data} {godzina}</b></p>
            prywatny:
            <input type="checkbox" id="createtimer-private">
            <% if (isAdmin) { %>
                wyróżniony:
                <input type="checkbox" id="createtimer-featured">
            <% } %>
            <br><br>
            <button onclick="createTimer()">Stwórz licznik</button>
            <button onclick="preview()">Podgląd</button>
            <br><br>
            <iframe id="previewframe" src="/timer/preview/nazwa/data/godzina/info" style="visibility: hidden;"></iframe>
        <% } %>

        <% timers.forEach(timer => { %>
            <div id="modal-<%=timer.id%>" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeModal('<%=timer.id%>')">  &times;</span>
                    <p>Some text in the Modal..</p>
                </div>
                <div class="modal-header">
                    <span class="close">&times;</span>
                    <h2>Edycja licznika <%=timer.title%></h2>
                  </div>
                  <div class="modal-body">
                    <input type="text" placeholder="Nazwa licznika" id="edittimer-title-<%=timer.id%>" value="<%=timer.title%>">
                    <input type="date" placeholder="Data" id="edittimer-date-<%=timer.id%>" value="<%=timer.date%>">
                    <input type="time" placeholder="Godzina" id="edittimer-time-<%=timer.id%>" value="<%=timer.time%>">
                    <input type="text" placeholder="Wyświetlanie" id="edittimer-display-<%=timer.id%>" value="<%=timer.display%>">
                  </div>
                  <div class="modal-footer">
                    <button onclick="editTimer('<%=timer.id%>')">Zatwierdź zmiany</h3>
                    <button onclick="closeModal('<%=timer.id%>')">Anuluj</h3>
                  </div>
            </div>
        <% }) %>

        <script>
            var lastPreviewTitle = "";
            var lastPreviewDate = "";
            var lastPreviewTime = "";
            var lastPreviewInfo = "";

            var isAdmin = "<%=isAdmin%>";

            var featured = document.getElementById("createtimer-featured");
            if (!isAdmin) {
                featured.style.visibility = "hidden";
            }

            function openModal(id) {
                var modal = document.getElementById("modal-" + id);
                modal.style.display = "block";
            }

            function closeModal(id) {
                var modal = document.getElementById("modal-" + id);
                modal.style.display = "none";
            }

            window.onclick = function(event) {
                if (event.target.classList.contains("modal")) {
                    event.target.style.display = "none";
                }
            }

            function preview() {
                var previewframe = document.getElementById("previewframe");
                var err = document.getElementById("err");
                var title = document.getElementById("createtimer-title").value;
                var date = document.getElementById("createtimer-date").value;
                var time = document.getElementById("createtimer-time").value;
                var display = document.getElementById("createtimer-display").value;

                if (title == "" || date == "" || time == "" || display == "") {
                    err.innerHTML = "Wypełnij tytuł, datę, godzinę i sposób wyświetlania.";
                    previewframe.src = "";
                    previewframe.style.visibility = "hidden";
                    lastPreviewTitle = "";
                    lastPreviewDate = "";
                    lastPreviewTime = "";
                    lastPreviewDisplay = "";

                    return;
                }

                if (title == lastPreviewTitle && date == lastPreviewDate && info == lastPreviewDisplay) {
                    previewframe.src = "";
                    previewframe.style.visibility = "hidden";
                    lastPreviewTitle = "";
                    lastPreviewDate = "";
                    lastPreviewTime = "";
                    lastPreviewDisplay = "";
                    return;
                }

                lastPreviewTitle = title;
                lastPreviewDate = date;
                lastPreviewTime = time;
                lastPreviewDisplay = display;

                previewframe.src = "/timer/preview/" + document.getElementById("createtimer-title").value + "/" + document.getElementById("createtimer-date").value + "/" + document.getElementById("createtimer-time").value + "/" + document.getElementById("createtimer-display").value;
                previewframe.style.visibility = "visible";
            }

            function deleteTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/delete', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }
            
            function createTimer() {
                var title = document.getElementById("createtimer-title").value;
                var date = document.getElementById("createtimer-date").value;
                var time = document.getElementById("createtimer-time").value;
                var display = document.getElementById("createtimer-display").value;

                if (title == "" || date == "" || time == "" || display == "") {
                    err.innerHTML = "Wypełnij tytuł, datę, godzinę oraz sposób wyświetlania!";
                    return;
                }

                var featuredcheck = document.getElementById("createtimer-featured");
                var featured = false;
                if (featuredcheck) featured = featuredcheck.checked;

                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "title": document.getElementById("createtimer-title").value,
                        "date": document.getElementById("createtimer-date").value,
                        "time": document.getElementById("createtimer-time").value,
                        "display": document.getElementById("createtimer-display").value,
                        "private": document.getElementById("createtimer-private").checked,
                        "featured": featured
                    })
                }
                fetch('/timer/create', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function editTimer(id) {
                var title = document.getElementById("edittimer-title-" + id).value;
                var date = document.getElementById("edittimer-date-" + id).value;
                var time = document.getElementById("edittimer-time-" + id).value;
                var display = document.getElementById("edittimer-display-" + id).value;

                if (title == "" || date == "" || time == "" || display == "") {
                    err.innerHTML = "Wypełnij tytuł, datę, godzinę oraz sposób wyświetlania!";
                    return;
                }

                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id,
                        "title": document.getElementById("edittimer-title-" + id).value,
                        "date": document.getElementById("edittimer-date-" + id).value,
                        "time": document.getElementById("edittimer-time-" + id).value,
                        "display": document.getElementById("edittimer-display-" + id).value,
                    })
                }
                
                fetch('/timer/edit', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function featureTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/feature', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function unfeatureTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/unfeature', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function publicTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/public', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function privateTimer(id) {
                var data = {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "timerId": id
                    })
                }
                fetch('/timer/private', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }

            function logout() {
                var data = {
                    method: 'POST',
                    headers: {
                        'Authorization': 'Basic ' + btoa(unescape(encodeURIComponent("<%=session.username%>")))
                    },
                }
                fetch('/auth/logout', data)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert(data.errors[0].message + " [" + data.errors[0].code + "]");
                        }
                    });
            }
        </script>
    </body>
</html>
